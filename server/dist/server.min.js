"use strict";var _express=_interopRequireDefault(require("express")),_cors=_interopRequireDefault(require("cors")),_dotenv=_interopRequireDefault(require("dotenv")),_openai=_interopRequireDefault(require("openai")),_potrace=_interopRequireDefault(require("potrace")),_sharp=_interopRequireDefault(require("sharp")),_mlKmeans=require("ml-kmeans"),_expressFileupload=_interopRequireDefault(require("express-fileupload")),_vtracer=_interopRequireDefault(require("vtracer"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e)){for(var r=0,t=new Array(e.length);r<e.length;r++)t[r]=e[r];return t}}_dotenv.default.config();var app=(0,_express.default)(),corsOptions={origin:"http://localhost:5173",methods:["GET","POST"],allowedHeaders:["Content-Type"]};app.use((0,_cors.default)(corsOptions)),app.use(_express.default.json({limit:"50mb"})),app.use((0,_expressFileupload.default)()),process.env.VITE_OPENAI_API_KEY||(console.error("Error: OPENAI_API_KEY is not defined in the .env file"),process.exit(1));var openai=new _openai.default({apiKey:process.env.VITE_OPENAI_API_KEY}),extractDominantColors=function(r){var t,a,n,o,s,i,u,c,p=arguments;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=1<p.length&&void 0!==p[1]?p[1]:24,e.prev=1,e.next=4,regeneratorRuntime.awrap((0,_sharp.default)(r).resize(100,100).toFormat("raw").raw().toBuffer());case 4:for(a=e.sent,n=[],o=0;o<a.length;o+=3)s=a[o],i=a[o+1],u=a[o+2],n.push([s,i,u]);if(0===n.length)throw new Error("No valid pixel data extracted");e.next=9;break;case 9:return c=(0,_mlKmeans.kmeans)(n,t),e.abrupt("return",c.centroids);case 13:throw e.prev=13,e.t0=e.catch(1),console.error("Error extracting dominant colors:",e.t0.message),new Error("Failed to extract dominant colors");case 17:case"end":return e.stop()}},null,null,[[1,13]])},vectorizeImage=function(r){var t,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,_vtracer.default){e.next=3;break}throw new Error("vtracer is not defined");case 3:return e.next=5,regeneratorRuntime.awrap((0,_vtracer.default)({input:r,colorPrecision:12,layerDifference:12,mode:"spline"}));case 5:return t=e.sent,e.next=8,regeneratorRuntime.awrap((0,_sharp.default)(Buffer.from(t)).toFormat("png").flatten({background:{r:255,g:255,b:255}}).toBuffer());case 8:return a=e.sent,e.abrupt("return",a);case 12:return e.prev=12,e.t0=e.catch(0),console.warn("vtracer failed:",e.t0.message),console.log("Falling back to potrace..."),e.abrupt("return",new Promise(function(n,o){_potrace.default.trace(r,{color:"black",threshold:128},function(r,t){var a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(!r){e.next=5;break}console.error("Potrace vectorization failed:",r.message),o(new Error("Vectorization failed using both vtracer and potrace")),e.next=15;break;case 5:return e.prev=5,e.next=8,regeneratorRuntime.awrap((0,_sharp.default)(Buffer.from(t)).toFormat("png").flatten({background:{r:255,g:255,b:255}}).toBuffer());case 8:a=e.sent,n(a),e.next=15;break;case 12:e.prev=12,e.t0=e.catch(5),o(new Error("Failed to convert SVG to PNG"));case 15:case"end":return e.stop()}},null,null,[[5,12]])})}));case 17:case"end":return e.stop()}},null,null,[[0,12]])};app.post("/segmentImage",function(r,t){var a,n,o,s,i,u,c,p,l,f,m,g,d,h,v,b;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,r.files&&r.files.image){e.next=3;break}return e.abrupt("return",t.status(400).json({error:"No file uploaded"}));case 3:if(a=r.files.image,n=a.data,["image/jpeg","image/png","image/gif","image/bmp","image/webp","image/svg"].includes(a.mimetype)){e.next=8;break}return e.abrupt("return",t.status(400).json({error:"Invalid file type. Only image files are allowed"}));case 8:if(o=r.body.colorOption,["vector","12","24","none"].includes(s=void 0===o?"12":o)){e.next=11;break}return e.abrupt("return",t.status(400).json({error:'Invalid color option. Allowed values are "vector", "12", "24", "none".'}));case 11:return e.next=13,regeneratorRuntime.awrap((0,_sharp.default)(n).toFormat("png").toBuffer());case 13:if(i=e.sent,"vector"===s)return e.next=17,regeneratorRuntime.awrap(vectorizeImage(i));e.next=21;break;case 17:c=e.sent,u=Buffer.from(c),e.next=44;break;case 21:if("none"!==s){e.next=25;break}u=i,e.next=44;break;case 25:if(12===(p=parseInt(s,10))||24===p)return e.next=29,regeneratorRuntime.awrap(extractDominantColors(i,p));e.next=44;break;case 29:return l=e.sent,e.next=32,regeneratorRuntime.awrap((0,_sharp.default)(i).raw().toBuffer());case 32:for(f=e.sent,m=[],g=function(e){var r=[f[e],f[e+1],f[e+2]],t=r[0],a=r[1],n=r[2],o=l.reduce(function(e,r){return Math.sqrt(Math.pow(e[0]-t,2)+Math.pow(e[1]-a,2)+Math.pow(e[2]-n,2))<Math.sqrt(Math.pow(r[0]-t,2)+Math.pow(r[1]-a,2)+Math.pow(r[2]-n,2))?e:r});m.push.apply(m,_toConsumableArray(o.map(Math.round)))},d=0;d<f.length;d+=3)g(d);return e.next=38,regeneratorRuntime.awrap((0,_sharp.default)(i).metadata());case 38:return h=e.sent,v=h.width,b=h.height,e.next=43,regeneratorRuntime.awrap((0,_sharp.default)(Buffer.from(m),{raw:{width:v,height:b,channels:3}}).toFormat("png").toBuffer());case 43:u=e.sent;case 44:t.status(200).json({image:u.toString("base64")}),e.next=51;break;case 47:e.prev=47,e.t0=e.catch(0),console.error("Error segmenting image:",e.t0.message),t.status(500).json({error:"Failed to segment image",message:e.t0.message});case 51:case"end":return e.stop()}},null,null,[[0,47]])}),app.post("/generateImage",function(r,t){var a,n,o,s,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(a=r.body,n=a.prompt,o=a.height,s=a.width,n&&"string"==typeof n){e.next=3;break}return e.abrupt("return",t.status(400).json({error:"Invalid or missing 'prompt' in request body"}));case 3:if(!o||isNaN(o)||o<=0)return e.abrupt("return",t.status(400).json({error:"Invalid 'height' in request body"}));e.next=5;break;case 5:if(!s||isNaN(s)||s<=0)return e.abrupt("return",t.status(400).json({error:"Invalid 'width' in request body"}));e.next=7;break;case 7:return e.prev=7,e.next=10,regeneratorRuntime.awrap(openai.images.generate({prompt:n,model:"dall-e-3",n:1,size:"".concat(s,"x").concat(o),response_format:"b64_json"}));case 10:i=e.sent,t.status(200).json({image:i.data[0].b64_json}),e.next=18;break;case 14:e.prev=14,e.t0=e.catch(7),console.error("Error generating image:",e.t0.message),t.status(500).json({error:"Failed to generate image",message:e.t0.message});case 18:case"end":return e.stop()}},null,null,[[7,14]])}),app.use(function(e,r,t,a){console.error("Internal server error:",e),t.status(500).json({error:"Internal server error",message:e.message})});var PORT=process.env.PORT||4e3;app.listen(PORT,function(){console.log("Server is running on http://localhost:".concat(PORT))});
//# sourceMappingURL=server.min.js.map
